version: "3.10"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
  api:
    image: novakate/skypro_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    ports:
      - "8000:8000"
    volumes:
      - ./.env.docker:/code/todolist/.env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 3
  migrations:
    image: novakate/skypro_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env.docker:/code/todolist/.env
    command: python3 manage.py migrate
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5